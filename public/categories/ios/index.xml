<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iOS on SHELTRON Visuals</title>
    <link>https://sheltron.netlify.com/categories/ios/</link>
    <description>Recent content in iOS on SHELTRON Visuals</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Aug 2016 20:32:03 -0800</lastBuildDate>
    
	<atom:link href="https://sheltron.netlify.com/categories/ios/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>iOS mandelbox raymarcher</title>
      <link>https://sheltron.netlify.com/portfolio/2016-07-10-ios_mandelbox/</link>
      <pubDate>Wed, 10 Aug 2016 20:32:03 -0800</pubDate>
      
      <guid>https://sheltron.netlify.com/portfolio/2016-07-10-ios_mandelbox/</guid>
      <description>Mobile fractal visualizer
Towards realtime mobile raytracing This was an experiment, after using SceneKit for the Bridge Engine at Occipital in iOS, to see what I could do with solely a SCNTechnique, full-frame shader. I was really inspired by this talk by Tim Lottes about filtering methods for realtime raymarching. What kind of quality could be achieved on an iPhone6 ?
Render Loop I didn&amp;rsquo;t implement all of the crazy stuff he mentions within the SCNTechnique, but a few were easy to do:</description>
    </item>
    
  </channel>
</rss>